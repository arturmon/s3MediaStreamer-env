# Default values for S3 Media Streamer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

nameOverride: ""
fullnameOverride: ""

image:
  registry: arturmon/s3stream
  pullPolicy: Always
  tag: latest
    # username: xxx
    # password: xxx
podAnnotations: {}
  # example: "key": "value"

podSecurityContext: {}
  # example:
  # runAsUser: 1000
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

consulSidecar:
  enabled: true
  hosts: consul-consul-server.observability.svc.cluster.local

port: 10000

service:
  type: ClusterIP
  metrics:
    enabled: true
    scheme: http
    path: /metrics

resources:
  requests:
    cpu: 100m
    memory: 50Mi
  limits:
    cpu: 250m
    memory: 512Mi

livenessProbe:
  path: /metrics
  initialDelaySeconds: 10
  periodSeconds: 10

readinessProbe:
  path: /metrics
  initialDelaySeconds: 10
  periodSeconds: 10

env:
  LOG_LEVEL: info
  S3_ACCESS_KEY_ID: app
  S3_SECRET_ACCESS_KEY: E7ct9Zr1rOu0ZJZLxTqv
  STORAGE_HOST: postgresql.database.svc.cluster.local
  SESSION_POSTGRESQL_HOST: postgresql.database.svc.cluster.local
  S3_ENDPOINT: minio.database.svc.cluster.local:9000
  MQ_BROKER: rabbitmq.message.svc.cluster.local
  #CONSUL_URL: consul-consul-server.observability.svc.cluster.local:8500
  # Use localhost only set helm values consulSidecar.enabled: true
  CONSUL_URL: localhost:8500
  LOG_TYPE: graylog
  GRAYLOG_SERVER_ADDR: graylog.logs.svc.cluster.local:12201
  OPEN_TELEMETRY_JAEGER_ENDPOINT: http://jaeger-collector.monitoring.svc.cluster.local:4318
  CACHING_ENABLED: true
  CACHING_ADDRESS: redis-headless.database.svc.cluster.local:6379
  CACHING_PASSWORD: redis
  CACHING_EXPIRATION: 2

ingress:
  host: s3streammedia.lab.me
  className: nginx
  useTls: false
  annotations:
    external-dns.alpha.kubernetes.io/hostname: s3streammedia.lab.me
  #  cert-manager.io/cluster-issuer: letsencrypt-prod

nodeSelector: {}
# example: "kubernetes.io/hostname": "node1"

tolerations: []
  # example:
  # - key: "key1"
  #   operator: "Equal"
  #   value: "value1"
#   effect: "NoSchedule"

affinity: {}
  # example:
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     nodeSelectorTerms:
  #     - matchExpressions:
  #       - key: kubernetes.io/e2e-az-name
  #         operator: In
  #         values:
  #         - e2e-az1
#         - e2e-az2
